説明

ゲームセンターでも、携帯電話でも、アプリでも、コンピュータでも、あるいはウェブ検索で偶然見つけたとしても、多くの人が「スネーク」のバージョンをプレイした懐かしい思い出を持っていることでしょう。蛇を操作して、グリッドに沿って成長していく様子を見るのはとても楽しいものですが、1つの...間違った...動きをしてしまいます。同じ間違いは二度としないので、もう一度やり直すことになります。

ハングリーギースでは、ビデオゲーム業界のこの古典的なゲームに、マルチプレイヤー、シミュレーションのスピンを加えました。あなたはAIエージェントを作り、他の人と対戦して最も長く生き残ることを目指します。自分のガチョウが飢えたり、他のガチョウとぶつかったりしないようにしなければなりません。ガチョウはピーマン、ドーナツ、ピザが大好きですが、これは全体的に見ても同じです。

強化学習、Q学習、ニューラルネットワークなどを使ってSnakeのモデルを構築する研究が盛んに行われています（もしかしたらPythonを使うかもしれませんね）。グリッドベースの強化学習の知識を、このエキサイティングな新しいチャレンジで次のレベルに引き上げてください。



評価

毎日、チームは最大5つのエージェント（ボット）を競技に提出することができます。出場したボットは、ラダー上で同じようなスキル評価を持つ他のボットとエピソード（ゲーム）を行います。時間が経つにつれ、スキル評価は、勝つと上がり、負けると下がります。提出されたすべてのボットは、競技会が終了するまでゲームを続けます。リーダーボードには、あなたの最高得点のボットのみが表示されますが、あなたの提出物ページでは、すべての提出物の進捗状況を確認することができます。

各投稿には推定スキル評価があり、ガウスN（μ,σ2）でモデル化されています。μは推定スキル、σは推定の不確実性を表し、時間の経過とともに減少します。

お客様が投稿をアップロードすると、まず検証エピソードが再生され、その投稿が適切に機能することを確認するために、その投稿のコピーと対戦します。このエピソードが失敗した場合、その投稿は「エラー」と判定されます。それ以外の場合は，μ0=600で初期化され，継続的な評価のために「すべての投稿」のプールに入ります．

全投稿のプールからエピソードを繰り返し実行し、似たような評価の投稿を選んで公正なマッチングを行うようにする。1つの投稿に対して、1日に約8つのエピソードを実行することを目標としていますが、より早くフィードバックを提供するために、最新の投稿エピソードについては若干の割合で増加します。

エピソードが終了すると、そのエピソードに登場した両方のエージェントの評価の見積もりを更新します。一方のエージェントが勝利した場合、そのエージェントのμ値を増加させ、対戦相手のμ値を減少させます -- 結果が引き分けだった場合、2つのμ値を平均値に近づけます。更新の大きさは、以前のμ値に基づく予想結果からの乖離と、各サブミッションの不確実性σとの関係で決まります。また、結果によって得られた情報量に応じて、σ項を減らします。ボットのエピソードの勝敗を決めるスコアは、スキル評価の更新には影響しません。

提出期限になると、追加の提出物はロックされます。ゲームを継続するために、さらに1週間が割り当てられます。この週の終わりに、リーダーボードが確定します。


タイムライン

2021年1月25日 - 開始日

2021年7月26日午後11時59分（UTC） - エントリー締め切り。競技に参加するためには、この日までに競技規則に同意する必要があります。

2021年7月26日午後11時59分（UTC） - チーム合併期限。参加者がチームに参加したり、チームを合併したりできる最終日です。

July 26, 2021, 11:59pm UTC- 最終提出期限。

2021年7月27日～2021年8月9日 - 最終ゲームが行われます。

2021年8月10日-入賞者の発表。

大会主催者が必要と判断した場合は、コンテストのタイムラインを更新する権利を有します。


ルール

エピソードの目的
自分のガチョウや他のエージェントのガチョウとぶつからないように、食べ物を食べて生き延び、最も長いターンを生き延びる。

遊び方
プレイヤーは、自分のガチョウを11×7のマス目の中に誘導します。北、南、東、西のいずれかに移動するように指示することができます。注意：ガチョウは、1回のターンで方向を変えることはできません（例：東に向かっているときに西を指示することはできません）。
エピソードは200ラウンド続けられ、最も高い報酬を得たエージェント、または最後に残ったエージェントがそのエピソードに勝利します。
報酬は、現在のターン数＋雁行時間で計算されます。
エピソード終了時に生き残っているエージェントは、（2*エピソードステップ）+長さとして最大の報酬を受け取ります。
エージェントは、ボード上に表示される食べ物を食べることで、自分のガチョウに区間を追加することができます。食べ物にはドーナツ、ピザ、パイ、ピーマンなどがあります。
盤面には常に最低2個の食べ物が置かれていなければなりません。
40歩ごとに、ガチョウは1セグメントを失います。
他のガチョウの体に衝突しても、頭が衝突したガチョウだけが失格となります。
毎ターン、すべてのエージェントには、すべてのガチョウの位置、すべてのエージェントの報酬の合計など、ゲームのあらゆる側面に関する完全な情報が記載された「観測」という状態の盤面のコピーが渡されます。

生き残ったエージェントは，最大の報酬を得ることができます 2∗configuration.episodeSteps.

エージェントの書き込み
エージェントは、盤面上の各ガチョウと餌の位置を含む observation と、盤面の大きさを含む configuration を受け取ります。

エージェントは、NORTH、SOUTH、EAST、WESTのいずれかを返す必要があります。

エージェントが受け取る生のJSONについての詳細は、Githubのhungry_geeseスキーマに記載されています。観測型、設定型、アクション型の型付けもGithubに掲載されています。

コードとしては以下のようになります。

from kaggle_environments.envs.hungry_geese.hungry_geese import Observation, Configuration, Action, row_col

def agent(obs_dict, config_dict):
    """このエージェントは常にobservation.food[0]に向かって移動しますが、ボードラッピングを利用しません"""
    observation = Observation(obs_dict)
    configuration = Configuration(config_dict)
    player_index = observation.index
    player_goose = observation.geese[player_index] (プレイヤーグース)
    player_head = player_goose[0] (プレイヤーヘッド)
    player_row, player_column = row_col(player_head, configuration.columns)
    food = observation.food[0]
    food_row, food_column = row_col(food, configuration.columns)

    if food_row > player_row:
        return Action.SOUTH.name
    if food_row < player_row:
        return Action.NORTH.name
    if food_column > player_column: return Action.NORTH.name
        return Action.EAST.name
    action.WEST.nameを返します。
エージェントルール
提出物は "エージェント "でなければなりません。
エージェントは、Kaggle Kernelsのノートブックイメージから任意のモジュールを使用することができます。
エージェントの唯一の目的は、アクションを生成することです。これに直接貢献していないアクティビティ/コードは悪意があるとみなされ、ルールに従って処理されます。
エージェントの最大ファイルサイズ制限は、100MBです。
各エージェントには、60秒の超過時間が割り当てられます。エージェントがアクションを返すのに1秒以上かかった場合、追加の時間はエージェントの超過時間から差し引かれます。エージェントの超過時間が0になった場合、そのエージェントは直ちに失格となります。
エラーを出したり、無効なアクションを返したエージェントはエピソードを失い、無効になる可能性があります。
評価
各投稿作品には、ガウスN（μ,σ2）でモデル化された評価があり、μは推定スキル、σはその推定の不確実性を表します。

お客様が投稿作品をアップロードすると、まず、その投稿作品が正しく動作するかどうかを確認するために、その投稿作品が自分自身と対戦する検証エピソードが再生されます。検証エピソードが失敗した場合、その投稿は "Error "と表示される。それ以外の場合は、その投稿をμ0=600で初期化し、「すべての投稿」のプールに入れて継続的に評価する。

全投稿作品」のプールから投稿作品を使ってエピソードを実行し、似たような評価の投稿作品を選ぶようにする。通常、各投稿は1日に1回エピソードに参加するようにしていますが、頻度は変動します。エピソードが終了すると、両方の投稿作品の評価が更新されます。一方の投稿者がエピソードに勝利した場合、その投稿者のμを増加させ、相手のμを減少させます。エピソードの結果が引き分けだった場合、2つのμ値を平均値に近づけます。この更新は、以前のμ値に基づく予想結果からの偏差と、各サブミッションの不確実性σとの相対的な大きさになります。また、エピソードの結果によって得られた情報量に応じて、σの項を減らします。

そのため、有効な投稿はすべて継続的に試合を行い、プールの増加に伴ってスコアがダイナミックに変化します。リーダーボードには、各チームのベスト・サブミッションの評価が表示されます。
